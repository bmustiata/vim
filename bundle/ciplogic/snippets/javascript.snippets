snippet preq
	${1:module} = require("promised-node").load("${2:$1}");${3}
snippet req
	${1:module} = require("${2:$1}")${3}
snippet fun
	function(${1}) {
		{2}
	}
snippet function
	function ${1:name}(${2:}) {
		${3:}
	}
snippet timeout
	setTimeout(function() {
		${2:}
	}, ${1:0});
snippet on
	on("${1}", function(${2:ev}) {
		${3}
	});
# call something
snippet .
	.${1}(${2});
snippet :
	: function(${1:}) {
		${2:}
	}
snippet c
	/**
	 * ${1}
	 */
snippet try
	try {
		${2:}
	} catch (${1:e}) {
	}
snippet then
	then(function(${1:r}) {
		${2}
	})
snippet thena
	then(function(${1:r}) {
		${3:}
	}, function(${2:e}) {
	})
snippet fori
	for (var ${1:i} = 0; $1 < ${2:data}; $1++) {
		${3:}
	}
snippet foritem
	for (var ${1:i} = 0; $1 < ${2:data}.length; $1++) {
		var ${3:item} = $2[$1];
		${4:}
	}
snippet log
	console.log(${1:});
snippet error
	console.error(${1:});
snippet .l
	.length
snippet .s
	.size()
snippet err
	then(null, function(${1:e}) {
		${2}
	})
snippet ret
	return ${1};
#each and forEach are actually the same.
snippet each
	forEach(function(${1:it}) {
		${2}
	});
snippet forEach
	forEach(function(${1:it}) {
		${2}
	});
snippet filter
	filter(function(${1:it}) {
		return ${2}
	})
snippet map
	map(function(${1:it}) {
		return ${2}
	})
snippet if
	if (${1:condition}) {
		${2}
	}
snippet p
	"${1:name}" : ${2}
snippet o
	{
		"${1:name}" : ${2}
	}
snippet for
	for (${1:var key} in ${2:value}) {
		${3:}
	}
snippet @p
	@param {${1:type}} ${2:name}
snippet @r
	@return {${1:type}} ${2}
snippet exportfn
	exports.${1:name} = function(${2:}) {
		${3:}
	}
snippet promise
	return new Promise(function(fulfill, reject) {
		${1:}
	});
snippet yuisuper
	this.constructor.superclass.${1:superCall}.apply(this, arguments);
snippet yuiclass
	Y.namespace("${1:module}").${2:Name} = Y.Base.create("$2", Y.Object, [], {
		${3:}
	});
snippet yuimodule
	{
	    "name" : "${1:name}",
		"builds" : {
			"$1" : {
				"jsfiles" : [
					"$1.js"
				],
				"config" : {
					"requires" : [
						${2}
					]
				}
			}
		}
	}
snippet build
	{
	    "name": "${1:name}",
	    "description": "${2:a quick project description}",
	    "author": [{
	        "name" : "${3:Bogdan Mustiata}",
	        "email" : "${4:bogdan.mustiata@gmail.com}"
	    }],
	    "version": "${5:0.1.0}",
	    "dependencies": {
			${6:}
	    },
	    "keywords": [${7:}],
	    "main": "./lib/$1.js",
	    "bugs": {
	        "url": "https://github.com/${8:bmustiata}/${9:$1}/issues"
	    },
	    "licenses": [
	        {
	            "type": "BSD",
	            "url": "https://github.com/$8/$9/blob/master/LICENSE"
	        }
	    ],
	    "repository": {
	        "type": "git",
	        "url": "https://github.com/$8/$9.git"
	    },
	    "readme": "$2",
	    "readmeFilename": "README.md",
	    "homepage": "${10:http://blog.ciplogic.com}"
	}
