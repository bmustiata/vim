snippet ife "Adds an if else"
<xsl:choose>
	<xsl:when test="${1:condition}">
		${VISUAL}${0:}
	</xsl:when>
	<xsl:otherwise>
	</xsl:otherwise>
</xsl:choose>
endsnippet

snippet xsl_keep_structure "Adds a XSL that keeps the general structure of the input document"
<?xml version="1.0" encoding="${1:UTF-8}"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="${2:2.0}">
	<xsl:output method="${3:xml}" encoding="${4:utf-8}" indent="${5:yes}"/>

	<xsl:template match="@*|node()">
		<xsl:copy>
			<xsl:apply-templates select="@*|node()"/>
		</xsl:copy>
	</xsl:template>

	<xsl:template match="${6:input[@type='text']}">
		${7:<xsl:value-of select="@value"/>}${0:}
	</xsl:template>
</xsl:stylesheet>
endsnippet

snippet xsl
<?xml version="1.0" encoding="${1:UTF-8}"?>
<xsl:stylesheet version="${2:1.0}"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="${3:xml}" encoding="${4:utf-8}" indent="${5:yes}"/>
	${0:}
</xsl:stylesheet>
endsnippet

snippet template
<xsl:template match="${1:@*|node()}"${2/.+/ mode="/}${2:custom}${2/.+/"/}>
	${0:}
</xsl:template>
endsnippet

snippet apply
<xsl:apply-templates select="${1:@*|node()}"${2/.+/ mode="/}${2:custom}${2/.+/"/}/>${0:}
endsnippet

snippet applytemplates
<xsl:apply-templates select="${1:@*|node()}"${2/.+/ mode="/}${2:custom}${2/.+/"/}/>${0:}
endsnippet

snippet apply-templates
<xsl:apply-templates select="${1:@*|node()}"${2/.+/ mode="/}${2:custom}${2/.+/"/}/>${0:}
endsnippet

snippet copyall "Copy all the subtree"
<xsl:copy>
	<xsl:apply-templates select="@*|node()"${1/.+/ mode="/}${1:custom}${1/.+/"/}/>
</xsl:copy>
endsnippet

snippet copyof
<xsl:copy-of select="${1:@*|node()}"/>${0:}
endsnippet

snippet copy-of
<xsl:copy-of select="${1:@*|node()}"/>${0:}
endsnippet

snippet valueof "value-of" i
<xsl:value-of select="${1:.}"/>${0:}
endsnippet

snippet value-of "value-of" i
<xsl:value-of select="${1:.}"/>${0:}
endsnippet

snippet text
<xsl:text>${VISUAL}${1:}</xsl:text>${0:}
endsnippet

snippet if
<xsl:if test="${1:condition}">
	${VISUAL}${0:}
</xsl:if>
endsnippet

snippet elem "Add an element"
<xsl:element name="${1:tagName}">
	${VISUAL}${0:}
</xsl:element>
endsnippet

snippet var "Add a variable"
<xsl:variable name="${1:name}" select="${2:.}"/>
endsnippet

snippet param "Add an external parameter"
<xsl:param name="${1:name}"/>
endsnippet

snippet foreach "for-each"
<xsl:for-each select="${1:..}">
	${VISUAL}${0:}
</xsl:for-each>
endsnippet
