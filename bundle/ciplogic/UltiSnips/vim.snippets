snippet wiki "Create a vimwiki Wiki"
" ${1:wiki_name} wiki {{{
let s:vimwiki_$1 = {}
let s:vimwiki_$1.path = '${2:~/vimwiki/}'
let s:vimwiki_$1.path_html = ''   " '' is replaced by derived path.'_html/'
let s:vimwiki_$1.css_name = 'style.css'
let s:vimwiki_$1.index = 'index'
let s:vimwiki_$1.ext = '.wiki'
let s:vimwiki_$1.maxhi = 0
let s:vimwiki_$1.syntax = 'default'

let s:vimwiki_$1.template_path = ''
let s:vimwiki_$1.template_default = ''
let s:vimwiki_$1.template_ext = ''

let s:vimwiki_$1.nested_syntaxes = {}
let s:vimwiki_$1.auto_export = 0
" is wiki temporary -- was added to g:vimwiki_list by opening arbitrary wiki
" file.
let s:vimwiki_$1.temp = 0

" diary
let s:vimwiki_$1.diary_rel_path = 'diary/'
let s:vimwiki_$1.diary_index = 'diary'
let s:vimwiki_$1.diary_header = 'Diary'
let s:vimwiki_$1.diary_sort = 'desc'

" Do not change this! Will wait till vim become more datetime awareable.
let s:vimwiki_$1.diary_link_fmt = '%Y-%m-%d'

" NEW! in v2.0
" custom_wiki2html
let s:vimwiki_$1.custom_wiki2html = ''
"
let s:vimwiki_$1.list_margin = -1
"}}}
endsnippet

snippet while "Create a while statement"
while ${1:condition}
	${2:}
endwhile
endsnippet

snippet fori "Create a for statement"
for ${1:i} in range(1, ${2:target})
	${3:}
endfor
endsnippet

snippet if "Create an if statement"
if ${1:condition}
	${2:}
endif
endsnippet

snippet ifelse "Create an if/else statement"
if ${1:condition}
	${2:}
else

endif
endsnippet

snippet elif "Create an elseif statement"
elseif ${1:condition}
	${2:}
endsnippet

snippet py "Create a python block"
python << endpython
${1:}
endpython
endsnippet

snippet fun "Create a function"
function! ${1:Name}()
	${2:}
endfunction
endsnippet

